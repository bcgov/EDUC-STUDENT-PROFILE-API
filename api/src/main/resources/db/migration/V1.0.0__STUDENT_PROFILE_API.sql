CREATE TABLE STUDENT_PROFILE_REQUEST (
  STUDENT_PROFILE_REQUEST_ID RAW(16) NOT NULL,
  DIGITAL_IDENTITY_ID RAW(16) NOT NULL,
  STUDENT_PROFILE_REQUEST_STATUS_CODE VARCHAR2(10) NOT NULL,
  LEGAL_FIRST_NAME VARCHAR2(40),
  LEGAL_MIDDLE_NAMES VARCHAR2(255),
  LEGAL_LAST_NAME VARCHAR2(40),
  DOB DATE,
  GENDER_CODE VARCHAR2(1),
  EMAIL VARCHAR2(255),
  REVIEWER VARCHAR2(255),
  INITIAL_SUBMIT_DATE DATE,
  STATUS_UPDATE_DATE DATE,
  FAILURE_REASON VARCHAR2(4000),
  EMAIL_VERIFIED VARCHAR2(1) NOT NULL,
  COMPLETE_COMMENT VARCHAR2(4000),
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_ID)  
             USING INDEX TABLESPACE API_STUDPROFRQST_IDX
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST IS 'Student Profile Request is a transaction record of a request by a student to update their profile.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.STUDENT_PROFILE_REQUEST_ID IS 'Unique surrogate key for each Student Profile request. GUID value must be provided during insert.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.DIGITAL_IDENTITY_ID IS 'Foreign key to Digital Identity table identifying the Digital Identity that is was used to make this request';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.STUDENT_PROFILE_REQUEST_STATUS_CODE IS 'Code indicating the status of the Student Student Profile request';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.LEGAL_FIRST_NAME IS 'The legal first name of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.LEGAL_MIDDLE_NAMES IS 'The legal middle names of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.LEGAL_LAST_NAME IS 'The legal last name of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.DOB IS 'The date of birth of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.GENDER_CODE IS 'The gender of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.EMAIL IS 'Email of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.REVIEWER IS 'IDIR of the staff user who is working or did work on the Student Profile Request';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.INITIAL_SUBMIT_DATE IS 'Date and time that the Student first fully submitted the request, which does not happen until after they submit and verify their email address.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.STATUS_UPDATE_DATE IS 'Date and time that the status of the Student Profile Request was last updated.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.FAILURE_REASON IS 'Free text reason for why Min EDUC staff could not complete the request. This is used for both Rejects and Unable to complete failures.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.EMAIL_VERIFIED IS 'Short value indicating whether the email of the student has been verified.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.COMPLETE_COMMENT IS 'Free text message entered by PEN Staff when completing Student Profile Requests.';


CREATE TABLE STUDENT_PROFILE_REQUEST_MACRO (
  STUDENT_PROFILE_REQUEST_MACRO_ID RAW(16) NOT NULL,
  MACRO_CODE VARCHAR2(10) NOT NULL,
  MACRO_TEXT VARCHAR2(4000) NOT NULL,
  MACRO_TYPE_CODE VARCHAR2(10) NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_MACRO_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_MACRO_ID)
             USING INDEX TABLESPACE API_STUDPROFRQST_IDX
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_MACRO IS 'List of text macros used as standard messages by PEN Staff when completing Student Profile Requests.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_MACRO.MACRO_CODE IS 'A short text string that identifies the macro and when identified will be replaced by the macro text.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_MACRO.MACRO_TEXT IS 'A standard text string that will be substituted for the macro code by the application.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_MACRO.MACRO_TYPE_CODE IS 'A code value indicating the type, or class, of the text macro.';


CREATE TABLE STUDENT_PROFILE_REQUEST_STATUS_CODE (
  STUDENT_PROFILE_REQUEST_STATUS_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,  
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_STATUS_CODE_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_STATUS_CODE)  
             USING INDEX TABLESPACE API_STUDPROFRQST_IDX 
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_STATUS_CODE IS 'Student Profile Request Status Code lists the transaction status values for the Student Profile Requests. Examples are Submitted, Pending Student Input, Completed, Rejected.';


CREATE TABLE STUDENT_PROFILE_REQUEST_GENDER_CODE (
  GENDER_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,  
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_GENDER_CODE_PK PRIMARY KEY (GENDER_CODE)  
             USING INDEX TABLESPACE API_STUDPROFRQST_IDX
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_GENDER_CODE IS 'Gender Code lists the standard codes for Gender: Female, Male, Diverse.';


CREATE TABLE STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE  (
  STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE)
             USING INDEX TABLESPACE API_STUDPROFRQST_IDX
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE IS 'Macro Type Code indicates the supported types of text macros.';

--Unique constraints
ALTER TABLE STUDENT_PROFILE_REQUEST_MACRO ADD CONSTRAINT STUDENT_PROFILE_REQUEST_MACRO_ID_CODE_TYPE_UK UNIQUE(MACRO_CODE, MACRO_TYPE_CODE);

--Foreign key constraints
ALTER TABLE STUDENT_PROFILE_REQUEST ADD CONSTRAINT STUDENT_PROFILE_REQUEST_STUDENT_PROFILE_REQUEST_STATUS_CODE_FK FOREIGN KEY (STUDENT_PROFILE_REQUEST_STATUS_CODE) REFERENCES STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE);
ALTER TABLE STUDENT_PROFILE_REQUEST ADD CONSTRAINT STUDENT_PROFILE_REQUEST_STUDENT_PROFILE_REQUEST_GENDER_CODE_FK FOREIGN KEY (GENDER_CODE) REFERENCES STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE);


-- Table STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE
CREATE TABLE STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (
  STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,  
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE)  
             USING INDEX TABLESPACE API_STUDPROFRQST_IDX
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE IS 'Student Profile Request Document Type Code lists the semantic types of documents that are supported. Examples include Birth Certificate (image of), Passport image, Permanent Resident Card image, etc.';

-- Table STUDENT_PROFILE_REQUEST_DOCUMENT
CREATE TABLE STUDENT_PROFILE_REQUEST_DOCUMENT (
  STUDENT_PROFILE_REQUEST_DOCUMENT_ID RAW(16) NOT NULL,
  STUDENT_PROFILE_REQUEST_ID RAW(16) NOT NULL, 
  STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE VARCHAR2(10) NOT NULL,
  FILE_NAME VARCHAR2(255) NOT NULL,
  FILE_EXTENSION VARCHAR2(255),
  FILE_SIZE NUMBER,
  DOCUMENT_DATA BLOB NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_DOCUMENT_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_DOCUMENT_ID)  
             USING INDEX TABLESPACE API_STUDPROFRQST_IDX
)
TABLESPACE API_STUDPROFRQST_BLOB_DATA
;  

COMMENT ON TABLE STUDENT_PROFILE_REQUEST_DOCUMENT IS 'Holds documents related to Students, either directly or indirectly.';

COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.STUDENT_PROFILE_REQUEST_DOCUMENT_ID IS 'Unique surrogate primary key for each Student Document. GUID value must be provided during insert.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.STUDENT_PROFILE_REQUEST_ID IS 'Foreign key to the Student Profile Request.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE IS 'Code indicating the type of the semantic type of the document. E.g. Birth Certificate, Passport, etc.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.FILE_NAME IS 'Name of the document file, without any local file path.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.FILE_EXTENSION IS 'Extension portion of the filename, if present. E.g. JPG, PNG, PDF, etc.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.FILE_SIZE IS 'Size of the file in bytes, if known.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.DOCUMENT_DATA IS 'Binary representation of the file contents.';

ALTER TABLE STUDENT_PROFILE_REQUEST_DOCUMENT ADD CONSTRAINT STUDENT_PROFILE_REQUEST_DOCUMENT_STUDENT_PROFILE_REQUEST_ID_FK FOREIGN KEY (STUDENT_PROFILE_REQUEST_ID) REFERENCES STUDENT_PROFILE_REQUEST (STUDENT_PROFILE_REQUEST_ID);
ALTER TABLE STUDENT_PROFILE_REQUEST_DOCUMENT ADD CONSTRAINT STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE_FK FOREIGN KEY (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE) REFERENCES STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE);

-- Table STUDENT_PROFILE_REQUEST_COMMENT
CREATE TABLE STUDENT_PROFILE_REQUEST_COMMENT 
(	
   STUDENT_PROFILE_REQUEST_COMMENT_ID RAW(16) NOT NULL, 
   STUDENT_PROFILE_REQUEST_ID RAW(16) NOT NULL, 
   STAFF_MEMBER_IDIR_GUID RAW(16), 
   STAFF_MEMBER_NAME VARCHAR2(255), 
   COMMENT_CONTENT VARCHAR2(4000), 
   COMMENT_TIMESTAMP DATE, 
   CREATE_USER VARCHAR2(32) NOT NULL, 
   CREATE_DATE DATE DEFAULT SYSDATE NOT NULL, 
   UPDATE_USER VARCHAR2(32) NOT NULL, 
   UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL, 
   CONSTRAINT STUDENT_PROFILE_REQUEST_COMMENT_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_COMMENT_ID)
              USING INDEX TABLESPACE API_STUDPROFRQST_IDX
);
ALTER TABLE STUDENT_PROFILE_REQUEST_COMMENT ADD CONSTRAINT STUDENT_PROFILE_REQUEST_COMMENT_STUDENT_PROFILE_REQUEST_ID_FK FOREIGN KEY (STUDENT_PROFILE_REQUEST_ID) REFERENCES STUDENT_PROFILE_REQUEST (STUDENT_PROFILE_REQUEST_ID);

--Indexes for commonly queried columns
CREATE INDEX STUDENT_PROFILE_REQUEST_DIGITAL_IDENTITY_ID_IDX ON STUDENT_PROFILE_REQUEST ( DIGITAL_IDENTITY_ID ) TABLESPACE API_STUDPROFRQST_IDX;
CREATE INDEX STUDENT_PROFILE_REQUEST_COMMENT_STUDENT_PROFILE_REQUEST_ID_IDX ON STUDENT_PROFILE_REQUEST_COMMENT ( STUDENT_PROFILE_REQUEST_ID ) TABLESPACE API_STUDPROFRQST_IDX;
CREATE INDEX STUDENT_PROFILE_REQUEST_DOCUMENT_STUDENT_PROFILE_REQUEST_ID_IDX ON STUDENT_PROFILE_REQUEST_DOCUMENT ( STUDENT_PROFILE_REQUEST_ID ) TABLESPACE API_STUDPROFRQST_IDX;


-- Student Profile Request Gender Code
INSERT INTO STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('F','Female','Persons whose current gender is female. This includes cisgender and transgender persons who are female.',1,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('M','Male','Persons whose current gender is male. This includes cisgender and transgender persons who are male.',2,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('X','Gender Diverse','Persons whose current gender is not exclusively as male or female. It includes people who do not have one gender, have no gender, are non-binary, or are Two-Spirit.',3,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('U','Unknown','Persons whose gender is not known at the time of data collection. It may or may not get updated at a later point in time. X is different than U.',4,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));

-- Student Profile Request Status Code
INSERT INTO STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('DRAFT','Draft','Request created but not yet submitted.',1,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('INITREV','First Review','Request has been submitted and is now in it''s first review by staff.',2,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('RETURNED','Returned for more information','Request has been returned to the submitter for more information.',3,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('SUBSREV','Subsequent Review','Request has been resubmitted with more info and is now in another review by staff.',4,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('AUTO','Completed by auto-match','Request was completed by the auto-match process, without staff review.',5,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('MANUAL','Completed by manual match','Request was completed by staff determining the matching PEN.',6,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));
INSERT INTO STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('REJECTED','Could not be fulfilled','Request could not be fullfilled by staff for the reasons provided.',7,TO_DATE('2020-01-01','YYYY-MM-DD'),TO_DATE('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',TO_DATE('2019-11-07','YYYY-MM-DD'));

-- Student Profile Request Document Type Code
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('CABIRTH','Canadian Birth Certificate','Canadian Birth Certificate',10,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('CAPASSPORT','Canadian Passport','Canadian Passport',20,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('CADL','Canadian Driver''s Licence','Canadian Driver''s Licence',30,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('BCIDCARD','Provincial Identification Card','Provincial Identification Card',40,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('BCSCPHOTO','BC Services Card w Photo','BC Services Card (Photo version only)',50,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('CACITZCARD','Canadian Citizenship Card','Canadian Citizenship Card',60,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('PRCARD','Permanent Residence Card','Permanent Residence Card',70,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('STUDENTPMT','Student / Study Permit','Student / Study Permit',80,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('IMM5292','IMM5292 Conf of Perm Residence','Confirmation of Permanent Residence (IMM5292)',90,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('IMM1000','IMM1000 Record of Landing','Canadian Immigration Record of Landing (IMM 1000, not valid after June 2002)',100,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('INDSTATUS','Indian Status Card','Indian Status Card',110,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('NAMECHANGE','Legal Name Change document','Canadian court order approving legal change of name',120,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('FORPASSPRT','Foreign Passport','Foreign Passport',130,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('ADOPTION','Canadian adoption order','Canadian adoption order',140,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('MARRIAGE','Marriage Certificate','Marriage Certificate',150,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('FORBIRTH','Foreign Birth Certificate','Foreign Birth Certificate (with English translation)',160,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) VALUES ('OTHER','Other','Other document type',170,TO_DATE('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),TO_DATE('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',TO_DATE('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
