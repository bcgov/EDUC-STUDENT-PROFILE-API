CREATE TABLE STUDENT_PROFILE_REQUEST (
  STUDENT_PROFILE_REQUEST_ID RAW(16) NOT NULL,
  DIGITAL_IDENTITY_ID RAW(16) NOT NULL,
  STUDENT_PROFILE_REQUEST_STATUS_CODE VARCHAR2(10) NOT NULL,
  LEGAL_FIRST_NAME VARCHAR2(40),
  LEGAL_MIDDLE_NAMES VARCHAR2(255),
  LEGAL_LAST_NAME VARCHAR2(40) NOT NULL,
  DOB DATE NOT NULL,
  GENDER_CODE VARCHAR2(1) NOT NULL,
  EMAIL VARCHAR2(255) NOT NULL,
  REVIEWER VARCHAR2(255),
  INITIAL_SUBMIT_DATE DATE,
  STATUS_UPDATE_DATE DATE,
  FAILURE_REASON VARCHAR2(4000),
  EMAIL_VERIFIED VARCHAR2(1) NOT NULL,
  COMPLETE_COMMENT VARCHAR2(4000),
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_ID)  
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST IS 'Profile Update Request is a transaction record of a request by a student to update their profile.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.STUDENT_PROFILE_REQUEST_ID IS 'Unique surrogate key for each Profile Update request. GUID value must be provided during insert.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Digital_Identity_ID IS 'Foreign key to Digital Identity table identifying the Digital Identity that is was used to make this request';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.STUDENT_PROFILE_REQUEST_Status_Code IS 'Code indicating the status of the Student Profile Update request';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Legal_First_Name IS 'The legal first name of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Legal_Middle_Names IS 'The legal middle names of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Legal_Last_Name IS 'The legal last name of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.DOB IS 'The date of birth of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Gender_Code IS 'The gender of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Email IS 'Email of the student';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Reviewer IS 'IDIR of the staff user who is working or did work on the Profile Update Request';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Initial_Submit_Date IS 'Date and time that the Student first fully submitted the request, which does not happen until after they submit and verify their email address.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Status_Update_Date IS 'Date and time that the status of the Profile Update Request was last updated.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.Failure_Reason IS 'Free text reason for why Min EDUC staff could not complete the request. This is used for both Rejects and Unable to complete failures.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.EMAIL_VERIFIED IS 'Short value indicating whether the email of the student has been verified.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST.COMPLETE_COMMENT IS 'Free text message entered by PEN Staff when completing Profile Update Requests.';


CREATE TABLE STUDENT_PROFILE_REQUEST_MACRO (
  STUDENT_PROFILE_REQUEST_MACRO_ID RAW(16) NOT NULL,
  MACRO_CODE VARCHAR2(10) NOT NULL,
  MACRO_TEXT VARCHAR2(4000) NOT NULL,
  MACRO_TYPE_CODE VARCHAR2(10) NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_MACRO_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_MACRO_ID)
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_MACRO IS 'List of text macros used as standard messages by PEN Staff when completing Profile Update Requests.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_MACRO.MACRO_CODE IS 'A short text string that identifies the macro and when identified will be replaced by the macro text.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_MACRO.MACRO_TEXT IS 'A standard text string that will be substituted for the macro code by the application.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_MACRO.MACRO_TYPE_CODE IS 'A code value indicating the type, or class, of the text macro.';


CREATE TABLE STUDENT_PROFILE_REQUEST_STATUS_CODE (
  STUDENT_PROFILE_REQUEST_STATUS_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,  
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_STATUS_CODE_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_STATUS_CODE)  
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_STATUS_CODE IS 'Profile Update Request Status Code lists the transaction status values for the Profile Update Requests. Examples are Submitted, Pending Student Input, Completed, Rejected.';


CREATE TABLE STUDENT_PROFILE_REQUEST_GENDER_CODE (
  GENDER_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,  
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_GENDER_CODE_PK PRIMARY KEY (GENDER_CODE)  
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_GENDER_CODE IS 'Gender Code lists the standard codes for Gender: Female, Male, Diverse.';


CREATE TABLE STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE  (
  STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE)
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE IS 'Macro Type Code indicates the supported types of text macros.';

--Unique constraints
ALTER TABLE STUDENT_PROFILE_REQUEST_MACRO ADD CONSTRAINT UQ_STUDENT_PROFILE_REQUEST_MACRO_ID_CODE_TYPE UNIQUE(MACRO_CODE, MACRO_TYPE_CODE);

--Foreign key constraints
alter table STUDENT_PROFILE_REQUEST add constraint FK_STUDENT_PROFILE_REQUEST_STUDENT_PROFILE_REQUEST_STATUS_CODE foreign key (STUDENT_PROFILE_REQUEST_STATUS_CODE) references STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE);
alter table STUDENT_PROFILE_REQUEST add constraint FK_STUDENT_PROFILE_REQUEST_STUDENT_PROFILE_REQUEST_GENDER_CODE foreign key (GENDER_CODE) references STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE);


-- Table STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE
CREATE TABLE STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (
  STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE VARCHAR2(10) NOT NULL,
  LABEL VARCHAR2(30),
  DESCRIPTION VARCHAR2(255),
  DISPLAY_ORDER NUMBER DEFAULT 1 NOT NULL,
  EFFECTIVE_DATE DATE NOT NULL,
  EXPIRY_DATE DATE NOT NULL,  
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE)  
);
COMMENT ON TABLE STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE IS 'Profile Update Request Document Type Code lists the semantic types of documents that are supported. Examples include Birth Certificate (image of), Passport image, Permanent Resident Card image, etc.';

-- Table STUDENT_PROFILE_REQUEST_DOCUMENT
CREATE TABLE STUDENT_PROFILE_REQUEST_DOCUMENT (
  STUDENT_PROFILE_REQUEST_DOCUMENT_ID RAW(16) NOT NULL,
  STUDENT_PROFILE_REQUEST_ID RAW(16) NOT NULL, 
  STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE VARCHAR2(10) NOT NULL,
  FILE_NAME VARCHAR2(255) NOT NULL,
  FILE_EXTENSION VARCHAR2(255),
  FILE_SIZE NUMBER,
  DOCUMENT_DATA BLOB NOT NULL,
  CREATE_USER VARCHAR2(32) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  UPDATE_USER VARCHAR2(32) NOT NULL,
  UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT STUDENT_PROFILE_REQUEST_DOCUMENT_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_DOCUMENT_ID)  
)
TABLESPACE STUDENT_PROFILE_BLOB_DATA
;  

COMMENT ON TABLE STUDENT_PROFILE_REQUEST_DOCUMENT IS 'Holds documents related to Students, either directly or indirectly.';

COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.STUDENT_PROFILE_REQUEST_DOCUMENT_ID IS 'Unique surrogate primary key for each Student Document. GUID value must be provided during insert.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.STUDENT_PROFILE_REQUEST_ID IS 'Foreign key to the Profile Update Request.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE IS 'Code indicating the type of the semantic type of the document. E.g. Birth Certificate, Passport, etc.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.FILE_NAME IS 'Name of the document file, without any local file path.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.FILE_EXTENSION IS 'Extension portion of the filename, if present. E.g. JPG, PNG, PDF, etc.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.FILE_SIZE IS 'Size of the file in bytes, if known.';
COMMENT ON COLUMN STUDENT_PROFILE_REQUEST_DOCUMENT.DOCUMENT_DATA IS 'Binary representation of the file contents.';

alter table STUDENT_PROFILE_REQUEST_DOCUMENT add constraint FK_STUDENT_PROFILE_REQUEST_DOCUMENT_STUDENT_PROFILE_REQUEST_ID foreign key (STUDENT_PROFILE_REQUEST_ID) references STUDENT_PROFILE_REQUEST (STUDENT_PROFILE_REQUEST_ID);
alter table STUDENT_PROFILE_REQUEST_DOCUMENT add constraint FK_STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE foreign key (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE) references STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE);

-- Table STUDENT_PROFILE_REQUEST_COMMENT
CREATE TABLE STUDENT_PROFILE_REQUEST_COMMENT 
(	
   STUDENT_PROFILE_REQUEST_COMMENT_ID RAW(16) NOT NULL, 
   STUDENT_PROFILE_REQUEST_ID RAW(16) NOT NULL, 
   STAFF_MEMBER_IDIR_GUID RAW(16), 
   STAFF_MEMBER_NAME VARCHAR2(255), 
   COMMENT_CONTENT VARCHAR2(4000), 
   COMMENT_TIMESTAMP DATE, 
   CREATE_USER VARCHAR2(32) NOT NULL, 
   CREATE_DATE DATE DEFAULT SYSDATE NOT NULL, 
   UPDATE_USER VARCHAR2(32) NOT NULL, 
   UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL, 
   CONSTRAINT STUDENT_PROFILE_REQUEST_COMMENT_PK PRIMARY KEY (STUDENT_PROFILE_REQUEST_COMMENT_ID)
);
alter table STUDENT_PROFILE_REQUEST_COMMENT add constraint FK_STUDENT_PROFILE_REQUEST_COMMENT_STUDENT_PROFILE_REQUEST_ID foreign key (STUDENT_PROFILE_REQUEST_ID) references STUDENT_PROFILE_REQUEST (STUDENT_PROFILE_REQUEST_ID);

--Indexes for commonly queried columns
create index STUDENT_PROFILE_REQUEST_DIGITAL_IDENTITY_ID_I on STUDENT_PROFILE_REQUEST ( DIGITAL_IDENTITY_ID );
create index STUDENT_PROFILE_REQUEST_COMMENT_STUDENT_PROFILE_REQUEST_ID_I on STUDENT_PROFILE_REQUEST_COMMENT ( STUDENT_PROFILE_REQUEST_ID );
create index STUDENT_PROFILE_REQUEST_DOCUMENT_STUDENT_PROFILE_REQUEST_ID_I on STUDENT_PROFILE_REQUEST_DOCUMENT ( STUDENT_PROFILE_REQUEST_ID );


-- Profile Update Request Gender Code
Insert into STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('F','Female','Persons whose current gender is female. This includes cisgender and transgender persons who are female.',1,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('M','Male','Persons whose current gender is male. This includes cisgender and transgender persons who are male.',2,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('X','Gender Diverse','Persons whose current gender is not exclusively as male or female. It includes people who do not have one gender, have no gender, are non-binary, or are Two-Spirit.',3,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_GENDER_CODE (GENDER_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('U','Unknown','Persons whose gender is not known at the time of data collection. It may or may not get updated at a later point in time. X is different than U.',4,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));

-- Profile Update Request Status Code
Insert into STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('DRAFT','Draft','Request created but not yet submitted.',1,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('INITREV','First Review','Request has been submitted and is now in it''s first review by staff.',2,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('RETURNED','Returned for more information','Request has been returned to the submitter for more information.',3,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('SUBSREV','Subsequent Review','Request has been resubmitted with more info and is now in another review by staff.',4,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('AUTO','Completed by auto-match','Request was completed by the auto-match process, without staff review.',5,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('MANUAL','Completed by manual match','Request was completed by staff determining the matching PEN.',6,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));
Insert into STUDENT_PROFILE_REQUEST_STATUS_CODE (STUDENT_PROFILE_REQUEST_STATUS_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('REJECTED','Could not be fulfilled','Request could not be fullfilled by staff for the reasons provided.',7,to_date('2020-01-01','YYYY-MM-DD'),to_date('2099-12-31','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'),'IDIR/GRCHWELO',to_date('2019-11-07','YYYY-MM-DD'));

-- Profile Update Request Document Type Code
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('CABIRTH','Canadian Birth Certificate','Canadian Birth Certificate',10,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('CAPASSPORT','Canadian Passport','Canadian Passport',20,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('CADL','Canadian Driver''s Licence','Canadian Driver''s Licence',30,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('BCIDCARD','Provincial Identification Card','Provincial Identification Card',40,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('BCSCPHOTO','BC Services Card w Photo','BC Services Card (Photo version only)',50,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('CACITZCARD','Canadian Citizenship Card','Canadian Citizenship Card',60,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('PRCARD','Permanent Residence Card','Permanent Residence Card',70,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('STUDENTPMT','Student / Study Permit','Student / Study Permit',80,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('IMM5292','IMM5292 Conf of Perm Residence','Confirmation of Permanent Residence (IMM5292)',90,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('IMM1000','IMM1000 Record of Landing','Canadian Immigration Record of Landing (IMM 1000, not valid after June 2002)',100,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('INDSTATUS','Indian Status Card','Indian Status Card',110,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('NAMECHANGE','Legal Name Change document','Canadian court order approving legal change of name',120,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('FORPASSPRT','Foreign Passport','Foreign Passport',130,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('ADOPTION','Canadian adoption order','Canadian adoption order',140,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('MARRIAGE','Marriage Certificate','Marriage Certificate',150,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('FORBIRTH','Foreign Birth Certificate','Foreign Birth Certificate (with English translation)',160,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE (STUDENT_PROFILE_REQUEST_DOCUMENT_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('OTHER','Other','Other document type',170,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/GRCHWELO',to_date('2019-12-20 00:00:00','YYYY-MM-DD HH24:MI:SS'));

-- Profile Update Request Macro Type Code
Insert into STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE (STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('MOREINFO','More Information Macro','Macros used when requesting that the student provide more information for a PEN Retrieval Request',1,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-02 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-02 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE (STUDENT_PROFILE_REQUEST_MACRO_TYPE_CODE,LABEL,DESCRIPTION,DISPLAY_ORDER,EFFECTIVE_DATE,EXPIRY_DATE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values ('REJECT','Reject Reason Macro','Macros used when rejecting a PEN Retrieval Request',2,to_date('2020-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),to_date('2099-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-02 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-02 00:00:00','YYYY-MM-DD HH24:MI:SS'));


-- Profile Update Request Macro
Insert into STUDENT_PROFILE_REQUEST_MACRO (STUDENT_PROFILE_REQUEST_MACRO_ID,MACRO_CODE,MACRO_TEXT,MACRO_TYPE_CODE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values (sys_guid(),'PCN','A PEN number can not be located using the information in your PEN request.'|| CHR(10) || CHR(10) ||'Please provide all other given names or surnames you have previously used or advise if you have never used any other names.','MOREINFO','IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_MACRO (STUDENT_PROFILE_REQUEST_MACRO_ID,MACRO_CODE,MACRO_TEXT,MACRO_TYPE_CODE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values (sys_guid(),'PID','To continue with your PEN request upload an IMG or PDF of your current Government Issued photo Identification (ID).'|| CHR(10) || CHR(10) ||'NOTE: If the name listed on the ID you upload is different from what''s in the PEN system, we will update our data to match. ID is covered by the B.C. Freedom of Information Protection of Privacy.','MOREINFO','IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_MACRO (STUDENT_PROFILE_REQUEST_MACRO_ID,MACRO_CODE,MACRO_TEXT,MACRO_TYPE_CODE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values (sys_guid(),'SOA','To continue with your PEN request please confirm the last B.C. Schools you attended or graduated from, including any applications to B.C. Post Secondary Institutions','MOREINFO','IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_MACRO (STUDENT_PROFILE_REQUEST_MACRO_ID,MACRO_CODE,MACRO_TEXT,MACRO_TYPE_CODE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values (sys_guid(),'NPF','A PEN number cannot be located using the information in your PEN request.' || CHR(10) || CHR(10) || 'For additional information visit: https://www2.gov.bc.ca/gov/content?id=CCE3580078AD4F988579DD5EBB42BA85 .' || CHR(10) || CHR(10) || 'You do not require a PEN for an application to a B.C. school or PSI, a PEN will be assigned upon registration.','REJECT','IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_MACRO (STUDENT_PROFILE_REQUEST_MACRO_ID,MACRO_CODE,MACRO_TEXT,MACRO_TYPE_CODE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values (sys_guid(),'OOP','The information provided in your PEN request indicates you may not have attended a B.C. School or public Post-Secondary Institution (PSI).'  || CHR(10) || CHR(10) ||  'You do not require a PEN for an application to a B.C. school or PSI, a PEN will be assigned upon registration.' || CHR(10) || CHR(10) || 'For additional information visit: https://www2.gov.bc.ca/gov/content?id=CCE3580078AD4F988579DD5EBB42BA85','REJECT','IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'));
Insert into STUDENT_PROFILE_REQUEST_MACRO (STUDENT_PROFILE_REQUEST_MACRO_ID,MACRO_CODE,MACRO_TEXT,MACRO_TYPE_CODE,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE) values (sys_guid(),'XPR','The identity of the person making the request cannot be confirmed as the same as the PEN owner.' || CHR(10) || CHR(10) ||  'Under the B.C. Freedom of Information Protection of Privacy Act, the PEN number can only be provided to the person assigned the PEN, that person''s current or future school, or that person''s parent or guardian.'  || CHR(10) || CHR(10) ||  'For additional information visit: https://www2.gov.bc.ca/gov/content?id=CCE3580078AD4F988579DD5EBB42BA85','REJECT','IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'),'IDIR/JOCOX',to_date('2020-04-06 00:00:00','YYYY-MM-DD HH24:MI:SS'));
